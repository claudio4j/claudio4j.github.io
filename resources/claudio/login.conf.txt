/*  Copyright 2004 Sun Microsystems, Inc.  All rights reserved.    */
/*  SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. */

fileRealm {
	com.sun.enterprise.security.auth.login.FileLoginModule required;
};

ldapRealm {
	com.sun.enterprise.security.auth.login.LDAPLoginModule required;
};

solarisRealm {
	com.sun.enterprise.security.auth.login.SolarisLoginModule required;
};

// JSPWiki-container 
//
// The standard application configuration defaults to using container-managed
// security as the first potential authenticator via the JAAS 
// 'WebContainerLoginModule.' The module attempts to authenticate the user
// by sniffing a Principal object from the HttpServletRequest. If that 
/  doesn't work, the module will next try to get the 'remote user' property
// in the servlet request and use that value to look up the user in the 
// configured JSPWiki user database (which by default persists data to
// an XML file called userdatabase.xml).
//
// If the WebContainerLoginModule is successful, the user will
// possess the built-in role principal 'Authenticated.'
//
// Note if you aren't using container-managed authentication for
// the JSPWiki webapp, WebContainerLoginModule will ALWAYS fail.
// By "not using," we mean:
//  - The <security-containts> section of WEB-INF/web.xml is 
//    commented out, or
//  - The servlet container doesn't have a configured authentication
//    realm for JSPWiki
//
// If the WebContainerLoginModule fails, a 'login' is attempted using
// the CookieAssertionLoginModule. The login succeeds when the user's
// HTTP request contains a cookie called 'JSPWikiAssertedName'.
// The value of this cookie will be the user's identity. The user
// will also possess the built-in role principal 'Asserted.'
// If you don't want users to be able to assert their identities in
// this way (and in a security-conscious environment, you don't want
// this) remove the line from the configuration entry below.
// 
// Failure of the CookieAssertionLoginModule triggers the the 
// AnonymousLoginModule, which always succeeds; the user's name will
// be the IP address, and will possess the built-in role principal 'Anonymous'.

JSPWiki-container {
  com.ecyrd.jspwiki.auth.login.WebContainerLoginModule    SUFFICIENT;
  com.ecyrd.jspwiki.auth.login.CookieAssertionLoginModule SUFFICIENT;
  com.ecyrd.jspwiki.auth.login.AnonymousLoginModule       SUFFICIENT;
};